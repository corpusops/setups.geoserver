---
- group:
    name: "{{geoserver_vars.tomcat}}"
- user:
    name: "{{geoserver_vars.tomcat}}"
    groups:  ["{{geoserver_vars.tomcat}}"]
    append: true
    system: true
    shell: /dev/null
    home: "/var/lib/{{geoserver_vars.tomcat}}"
- package:
    cache_valid_time: "{{60*60}}"
    update_cache: yes
    name: "{{geoserver_vars.packages}}"
    state: present
  tags: [pkgs]
- include_role: {name: corpusops.roles/install_archive}
  with_items: "{{geoserver_vars.tomcat_bin}}"
  loop_control: {loop_var: _archive}
- file:
    state: link
    src:  "{{geoserver_vars.tomcat_vpath}}"
    dest: "{{geoserver_vars.tomcat_path}}"
- file:
    state: link
    src: "{{geoserver_vars.tomcat_path}}/logs"
    dest: "{{geoserver_vars.tomcat_loglnk}}"
- file:
    state: absent
    path: "{{geoserver_vars.tomcat_path}}/webapps/{{item}}"
  with_items: "{{geoserver_vars.tomcat_deactivated_apps}}"
- include_role: {name: corpusops.roles/install_archive}
  with_items: "{{geoserver_vars.archives}}"
  loop_control: {loop_var: _archive}
- name: "test if alreagy geoserver unpacked"
  stat: {path: "{{geoserver_vars.root}}/geoserver/index.html"}
  failed_when: false
  register: _geoserver_geoserver_t
- file:
    state: directory
    path: "{{geoserver_vars.root}}/geoserver"
- name: unarchives
  when: not _geoserver_geoserver_t.stat.exists
  unarchive:
    remote_src: true
    keep_newer: true
    src: "{{geoserver_vars.root}}/geoserver.war"
    dest: "{{geoserver_vars.root}}/geoserver"
- include_role: {name: corpusops.roles/install_archive}
  with_items: "{{geoserver_vars.plugin_archives}}"
  loop_control: {loop_var: _archive}
- name: marlin
  get_url:
    url: "{{item.url}}"
    checksum: "{{item.checksum}}"
    remote_src: true
    dest: "{{geoserver_vars.root}}"
    mode: "0644"
  tags: [marlin1]
  with_items: "{{geoserver_vars.marlin}}"
- shell: |
    set -ex
    t=geoserver/WEB-INF/lib/
    cd "{{geoserver_vars.root}}"
    rm -vf $t/jai_core-*jar $t/jai_imageio-*.jar $t/jai_codec-*.jar $t/*gdal*bindings*jar
    rsync -av /usr/share/java/gdal.jar *jar ../jai/lib/*jar $t/
  changed_when: false
- synchronize:
    rsync_opts: ['-av', '--delete']
    src: "{{geoserver_vars.root}}/geoserver/"
    dest: "{{geoserver_vars.home}}/"
  delegate_to: "{{ inventory_hostname }}"
